{"version":3,"sources":["logo.svg","Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0QAAe,I,6BC+BAA,MA5Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,gBAA1B,SACKI,GADIC,QAKjB,mBAAGL,UAAU,iBAAb,SAA+BH,EAAQS,MAAM,YC6B9CC,E,4MAtCXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EAEZC,U,sBAAY,8BAAAC,EAAA,sEACqCC,IAAMC,IAAI,4CAD/C,gBACgBJ,EADhB,EACAK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAF1B,2C,uDAIZ,WACIQ,KAAKN,c,oBAET,WAAU,IAAD,EACyBM,KAAKT,MAA3BC,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OACI,yBAASV,UAAU,YAAnB,SACCS,EACA,qBAAKT,UAAW,SAAhB,SACG,sBAAMA,UAAU,eAAhB,0BAGP,qBAAKA,UAAW,SAAhB,SACKU,EAAOP,KAAI,SAAAe,GAAK,OACb,cAAC,EAAD,CAEAC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GAxBVE,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.011b3234.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Movie({ year, title, summary, poster, genres }) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"movie__genres\">\n                    {genres.map((genre, index) => (\n                        <li key={index} className=\"genres__genre\">\n                            {genre}\n                        </li>\n                    ))}\n                </ul>\n                <p className=\"movie__summary\">{summary.slice(0)}</p>\n            </div>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired\n};\n\nexport default Movie;\n\n// each map's item NEEDS KEY!!","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        movies: []\n    };\n    getMovies = async () => {\n        const { data: { data: { movies } } } = await axios.get(\"http://yts-proxy.now.sh/list_movies.json\");\n        this.setState({movies, isLoading: false });\n    };\n    componentDidMount() {\n        this.getMovies();\n    }\n    render() {\n        const { isLoading, movies } = this.state;\n        return (\n            <section className=\"container\">\n            {isLoading ? (\n             <div className =\"loader\">\n                <span className=\"loader__text\">Loading...</span>\n            </div>\n         ) : (\n         <div className =\"movies\">\n             {movies.map(movie => (\n                 <Movie\n                 key={movie.id}\n                 id={movie.id}\n                 year={movie.year}\n                 title={movie.title}\n                 summary={movie.summary}\n                 poster={movie.medium_cover_image}\n                 genres={movie.genres}\n                 />\n             ))}\n         </div>\n            )}\n        </section>\n        );\n    }\n}\nexport default App;\n\n//because isLoading itself wasn't defined, have to do this.state.\n//or you can simply const it in the front.\n//here what's been called was componentDidMount\n//so data is fetched from componentDidMount\n//now we render movie instead of we are ready \n//async await or else, js won't wait for the function\n\n//class name 을 써야만 react recognizes class ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// component returns html . write it as if they were html -> < />\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}