{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","components/Navigation.js","routes/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Navigation","fromNavigation","Detail","location","history","undefined","push","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gWA2CeA,MAvCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OACI,cAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACHP,OACAC,QACAC,UACAC,SACAC,WAPR,SAUA,sBAAKI,UAAU,QAAf,UACI,qBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKO,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BP,IAC9B,oBAAIO,UAAU,cAAd,SAA6BR,IAC7B,oBAAIQ,UAAU,gBAAd,SACKJ,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,gBAA1B,SACKI,GADIC,QAKjB,mBAAGL,UAAU,iBAAb,SAA+BN,EAAQY,MAAM,cCiB9CC,E,4MAtCXR,MAAQ,CACJS,WAAW,EACXC,OAAQ,I,EAEZC,U,sBAAY,8BAAAC,EAAA,sEACqCC,IAAMC,IAAI,6CAD/C,gBACgBJ,EADhB,EACAK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAF1B,2C,uDAIZ,WACIQ,KAAKN,c,oBAET,WAAU,IAAD,EACyBM,KAAKjB,MAA3BS,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OACI,yBAAST,UAAU,YAAnB,SACCQ,EACA,qBAAKR,UAAW,SAAhB,SACG,sBAAMA,UAAU,eAAhB,0BAGP,qBAAKA,UAAW,SAAhB,SACKS,EAAON,KAAI,SAAAc,GAAK,OACb,cAAC,EAAD,CAEA1B,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QANTqB,EAAM1B,e,GAxBT4B,IAAMC,W,MCQVC,MAXf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,qBAAKtB,UAAU,mBAAf,SACE,yD,MCUKyB,MAbf,WACI,OAAQ,sBAAKzB,UAAU,MAAf,UACJ,cAAC,IAAD,CAAMH,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAI,CACNC,SAAS,SACTC,MAAO,CACH2B,gBAAgB,IAHxB,uBCWOC,E,uKAfX,WAAqB,IAAD,EACYX,KAAKM,MAA3BM,EADU,EACVA,SAAUC,EADA,EACAA,aACKC,IAAnBF,EAAS7B,OACX8B,EAAQE,KAAK,O,oBAGjB,WAAU,IACEH,EAAaZ,KAAKM,MAAlBM,SACR,OAAIA,EAAS7B,MACJ,+BAAO6B,EAAS7B,MAAMN,QAEtB,S,GAZI0B,IAAMC,WCiBZY,MAVf,WACI,OAAQ,eAAC,IAAD,WACJ,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAS,EAAMC,UAAc5B,IAC7C,cAAC,IAAD,CAAO0B,KAAK,SAASE,UAAYd,IACjC,cAAC,IAAD,CAAOY,KAAK,aAAaE,UAAYR,QCF9BS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.c0909f23.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n    return (\n        <Link to={{\n            pathname: `/movie/${id}`,\n            state: {\n                year,\n                title,\n                summary,\n                poster,\n                genres\n            }\n        }}>\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"movie__genres\">\n                    {genres.map((genre, index) => (\n                        <li key={index} className=\"genres__genre\">\n                            {genre}\n                        </li>\n                    ))}\n                </ul>\n                <p className=\"movie__summary\">{summary.slice(0)}</p>\n            </div>\n        </div>\n        </Link>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired\n};\n\nexport default Movie;\n\n// each map's item NEEDS KEY!!","import './Home.css';\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\n\nclass Home extends React.Component {\n    state = {\n        isLoading: true,\n        movies: []\n    };\n    getMovies = async () => {\n        const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n        this.setState({movies, isLoading: false });\n    };\n    componentDidMount() {\n        this.getMovies();\n    }\n    render() {\n        const { isLoading, movies } = this.state;\n        return (\n            <section className=\"container\">\n            {isLoading ? (\n             <div className =\"loader\">\n                <span className=\"loader__text\">Loading...</span>\n            </div>\n         ) : (\n         <div className =\"movies\">\n             {movies.map(movie => (\n                 <Movie\n                 key={movie.id}\n                 id={movie.id}\n                 year={movie.year}\n                 title={movie.title}\n                 summary={movie.summary}\n                 poster={movie.medium_cover_image}\n                 genres={movie.genres}\n                 />\n             ))}\n         </div>\n            )}\n        </section>\n        );\n    }\n}\nexport default Home;\n\n//because isLoading itself wasn't defined, have to do this.state.\n//or you can simply const it in the front.\n//here what's been called was componentDidMount\n//so data is fetched from componentDidMount\n//now we render movie instead of we are ready \n//async await or else, js won't wait for the function\n\n//class name 을 써야만 react recognizes class ","import React from \"react\";\nimport \"./About.css\";\n\nfunction About(props){\n    console.log(props)\n    return (\n        <div className=\"about__container\">\n          <span>\n            무야호\n          </span>\n        </div>\n      );\n    }\n\nexport default About;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Navigation.css';\n\nfunction Navigation(){\n    return (<div className=\"nav\">\n        <Link to=\"/\">Home</Link>\n        <Link to={{\n            pathname:\"/about\",\n            state: {\n                fromNavigation: true\n            }\n        }}>About</Link>\n    </div>\n    );\n}\n\nexport default Navigation;\n\n//to create the navigation buttons, we don't just href like html.\n//we import router, with Link to.\n//cannot use link outside of router. only inside. \n","import React from \"react\";\n\nclass Detail extends React.Component {\n    componentDidMount() {\n      const { location, history } = this.props;\n      if (location.state === undefined) {\n        history.push(\"/\");\n      }\n    }\n    render() {\n        const { location } = this.props;\n        if (location.state) {\n          return <span>{location.state.title}</span>;\n        } else {\n          return null;\n        }\n      }\n    }\nexport default Detail;","\nimport React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Navigation from \"./components/Navigation\"\nimport Detail from \"./routes/Detail\";\n\n\nfunction App() {\n    return (<HashRouter>\n        <Navigation />\n        <Route path=\"/\" exact = {true} component = { Home } />\n        <Route path=\"/about\" component={ About } />\n        <Route path=\"/movie/:id\" component={ Detail } />\n    </HashRouter>\n    );\n}\n\nexport default App;\n\n\n\n//router takes the url, looks at it and directs it to the assigned component/route...\n//route path = just like the path function from django settings\n//but another way is having the routes to take the url for each. compare everything on the router.ROuter compares is with all the routes and then find the right one. It can render two at the same time- home, home/intro, with what you write on the hash. # and the route is /\n//to minimize, you put exact = true to avoid the home being rendered for both. it only allows nothing, the home, just \"/\" as the home route.\n//prop, location, state.\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// component returns html . write it as if they were html -> < />\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}